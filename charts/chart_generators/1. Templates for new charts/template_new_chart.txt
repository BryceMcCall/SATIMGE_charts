# charts/chart_generators/fig<NUM>_<module_name>.py

import sys
from pathlib import Path

# —————————————————————————————————————
# If run as script, add project root to sys.path so
#  `import charts.common…` works
if __name__ == "__main__" and __package__ is None:
    project_root = Path(__file__).resolve().parents[2]
    sys.path.insert(0, str(project_root))
# —————————————————————————————————————

import pandas as pd
import plotly.graph_objects as go
from charts.common.style import apply_common_layout
from charts.common.save  import save_figures

def generate_fig<NUM>_<module_name>(df: pd.DataFrame, output_dir: str) -> None:
    """
    Generates Figure <NUM>: <Short description>
    - df: processed DataFrame (from processed_dataset.parquet)
    - output_dir: path to save images & data.csv
    """
    print("generating figure <NUM>")

    # 1) Prepare data
    #    e.g. data = df.groupby([...])['...'].sum().reset_index()

    # 2) Build Plotly figure
    #    fig = go.Figure()
    #    fig.add_trace(…)
    
    # 3) Apply common styling
    fig = apply_common_layout(fig, "Fig <NUM>: <Title>")

    # 4) Save images (dev & report)
    print("saving figure <NUM>")
    save_figures(fig, output_dir, name="fig<NUM>_<module_name>")

    # 5) Export underlying data
    data.to_csv(Path(output_dir) / "data.csv", index=False)


# —————————————————————————————————————
# Allows direct execution for testing:
if __name__ == "__main__":
    project_root = Path(__file__).resolve().parents[2]
    df = pd.read_parquet(project_root / "data/processed/processed_dataset.parquet")
    out = project_root / "outputs/charts_and_data/fig<NUM>_<module_name>"
    out.mkdir(parents=True, exist_ok=True)
    generate_fig<NUM>_<module_name>(df, str(out))
# —————————————————————————————————————
